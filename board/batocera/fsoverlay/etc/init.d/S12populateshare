#!/bin/sh

if test "$1" != "start"
then
    # call user script with stop condition
    test -e /boot/postshare.sh && bash /boot/postshare.sh stop
    exit 0
fi

IN=/usr/share/batocera/datainit
OUT=/userdata
# force the creation of some directories
for DIR in cheats \
           system/.cache \
           system/.config/lirc \
           system/bluetooth \
           system/configs \
           system/pacman \
           system/pacman/db \
           system/pacman/pkg \
           system/pacman/hooks \
           system/logs
do
    if test ! -e "$OUT""/""$DIR"
    then
        mkdir -p "$OUT""/""$DIR"
    fi
done

# directories / files to copy when initializing the user data
#
# NO UPDATE IS POSSIBLE ON THESE DIRECTORIES WHEN batocera.linux IS UPDATED
#
# there are almost empty, it's just for the structure
# the user can delete the directory, it will recreate the structure
# the user can delete files, files will not be recreated
for FILE in splash \
            system/configs/emulationstation/es_input.cfg \
            system/configs/emulationstation/es_settings.cfg \
            system/configs/umtool \
            system/batocera.conf \
            system/pacman/hooks/batocera-install.hook \
            system/pacman/hooks/batocera-uninstall.hook \
            system/pacman/pacman.conf
do
    # Skip updating specific files
    # Update if newer
    if [ -e "${IN}/${FILE}" ] && { [ ! -e "${OUT}/${FILE}" ] || [ "${IN}/${FILE}" -nt "${OUT}/${FILE}" ]; }; then
        mkdir -p "$(dirname "${OUT}/${FILE}")"
        echo "Updating $OUT/$FILE"
        cp -rfu --preserve=timestamps "${IN}/${FILE}" "$(dirname "${OUT}/${FILE}")"/
    fi
done

# udev : create a link for rules persistance
mkdir -p /userdata/system/udev/rules.d
rm -rf /run/udev/rules.d
ln -s /userdata/system/udev/rules.d/ /run/udev/

# and add the machine-id
test -e /userdata/system/machine-id || dbus-uuidgen --ensure=/userdata/system/machine-id
ln -sf /userdata/system/machine-id /var/lib/dbus/machine-id
ln -sf /userdata/system/machine-id /etc/machine-id

# save to avoid to redo that all the times
cp /usr/share/batocera/batocera.version /userdata/system/data.version

# call user script with start condition
test -e /boot/postshare.sh && bash /boot/postshare.sh start

### cleaning old alsa files - 08/07/2021
rm -f /userdata/system/.asoundrc
if test -e /boot/asoundrc
then
    mount -o remount,rw /boot
    rm -f /boot/asoundrc
    mount -o remount,ro /boot
fi
###

exit 0
# END
